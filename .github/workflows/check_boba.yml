name: Check Boba Availability

on:
  schedule:
    - cron: '*/15 16-23 * * *'  # Runs every 15 minutes from 11am-6pm EST (16:00-23:00 UTC)
    - cron: '*/15 0-5 * * *'    # Runs every 15 minutes from 7pm-1am EST (00:00-05:00 UTC)
  workflow_dispatch:  # Allows manual triggering

jobs:
  check-boba:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install Chrome and ChromeDriver
      run: |
        # Install Chrome
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable xvfb
        
        # Get exact Chrome version and download matching ChromeDriver
        CHROME_VERSION=$(google-chrome --version | cut -d " " -f 3)
        CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d "." -f 1)
        echo "Chrome version: $CHROME_VERSION"
        echo "Chrome major version: $CHROME_MAJOR_VERSION"
        
        # Set Chrome version in environment
        echo "CHROME_VERSION=$CHROME_VERSION" >> $GITHUB_ENV
        echo "CHROME_MAJOR_VERSION=$CHROME_MAJOR_VERSION" >> $GITHUB_ENV
        
        # Download matching ChromeDriver
        wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/$(curl -s https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_$CHROME_MAJOR_VERSION)/linux64/chromedriver-linux64.zip"
        unzip chromedriver-linux64.zip
        chmod +x chromedriver-linux64/chromedriver
        
        # Set path and verify versions
        echo "CHROMEDRIVER_PATH=$PWD/chromedriver-linux64/chromedriver" >> $GITHUB_ENV
        $PWD/chromedriver-linux64/chromedriver --version
        google-chrome --version
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools
        pip install -r requirements.txt
    
    - name: Create env file
      run: |
        echo "EMAIL_SENDER=${{ secrets.EMAIL_SENDER }}" > .env
        echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env
        echo "EMAIL_RECEIVER=${{ secrets.EMAIL_RECEIVER }}" >> .env
        echo "WAS_UNAVAILABLE=${{ vars.WAS_UNAVAILABLE }}" >> .env
    
    - name: Run boba checker
      run: |
        # Start virtual display
        Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        export DISPLAY=:99
        # Print current status for debugging
        echo "Current WAS_UNAVAILABLE value: ${{ vars.WAS_UNAVAILABLE }}"
        python boba_checker.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WAS_UNAVAILABLE: ${{ vars.WAS_UNAVAILABLE }}

    - name: Update status and commit
      if: success()
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        if [ -f boba_status.json ]; then
          git add boba_status.json
          git commit -m "Update boba status" || echo "No changes to commit"
          git push || echo "No changes to push"
        fi 